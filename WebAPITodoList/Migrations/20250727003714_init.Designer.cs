// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITodoList.Data;

#nullable disable

namespace WebAPITodoList.Migrations
{
    [DbContext(typeof(MyToDoDbContext))]
    [Migration("20250727003714_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPITodoList.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Roles_ID");

                    b.HasIndex(new[] { "RoleName" }, "UK_Roles_ROLENAME")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebAPITodoList.Models.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Lists__3214EC07F52BEF00");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("WebAPITodoList.Models.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3214EC07588F060B");

                    b.HasIndex("ListId");

                    b.ToTable("ToDoTasks");
                });

            modelBuilder.Entity("WebAPITodoList.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC073AAB4F5D");

                    b.HasIndex(new[] { "Email" }, "UQ__tmp_ms_x__A9D10534E69BB870")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPITodoList.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateRoleDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_UserRoles_ID");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "RoleId", "UserId" }, "UQ_UserRoles_RoleUser")
                        .IsUnique();

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("WebAPITodoList.Models.ToDoList", b =>
                {
                    b.HasOne("WebAPITodoList.Models.User", "User")
                        .WithMany("ToDoLists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Lists__UserId__2B0A656D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPITodoList.Models.ToDoTask", b =>
                {
                    b.HasOne("WebAPITodoList.Models.ToDoList", "List")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("ListId")
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__ListId__2BFE89A6");

                    b.Navigation("List");
                });

            modelBuilder.Entity("WebAPITodoList.Models.UserRole", b =>
                {
                    b.HasOne("WebAPITodoList.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__07C12930");

                    b.HasOne("WebAPITodoList.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__1BC821DD");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPITodoList.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebAPITodoList.Models.ToDoList", b =>
                {
                    b.Navigation("ToDoTasks");
                });

            modelBuilder.Entity("WebAPITodoList.Models.User", b =>
                {
                    b.Navigation("ToDoLists");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
